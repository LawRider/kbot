variables:
  GO_IMAGE: "golang:1.21.5"
  DOCKER_IMAGE: "docker:24.0.7"
  DOCKER_DIND_IMAGE: "docker:24.0.7-dind"
  OS: "linux"
  ARCH: "amd64"
  BUILDS_DIR: "bin"
  APP: "kbot"
  GIT_STRATEGY: clone
  GIT_DEPTH: 0
  
default:
  image:
    name: $GO_IMAGE

stages:
  - vars
  - test
  - build
  - image
  
vars-job:
  stage: vars
  script:
    - echo "VERSION=$(git describe --tags --abbrev=0)-$(git rev-parse --short HEAD)" >> build.env
    - echo "BUILD_URL=$(echo "${CI_REPOSITORY_URL}" | sed -E "s|https:\/\/.*@(.*)\.git|\1|")" >> build.env
  artifacts:
    reports:
      dotenv: build.env

test-job:
  stage: test
  script:
    - go test -v

build-job:
  stage: build
  script:
    - gofmt -s -w ./
    - go get
    - CGO_ENABLED=0 GOOS=${OS} GOARCH=${ARCH} go build -v -o ${BUILD_DIR}/${APP} -ldflags "-X=${BUILD_URL}$/cmd.appVersion=${VERSION}"
 
image-job:
  stage: image
  image: $DOCKER_IMAGE
  services:
    - name: $DOCKER_DIND_IMAGE
      alias: docker
  variables:
    IMAGE_TAG: ${CI_REGISTRY_IMAGE}:${VERSION}-${OS}-${ARCH}
  script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
    - docker build . -t $IMAGE_TAG --build-arg OS=${OS} --build-arg ARCH=${ARCH}
    - docker push $IMAGE_TAG
    - docker logout
